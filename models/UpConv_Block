class Simple_Gudi_UpConv_Block(nn.Module):
    def __init__(self, in_channels, out_channels, oheight=0, oweight=0):
        super(Simple_Gudi_UpConv_Block, self).__init__()
        self.conv1 = nn.Conv2d(in_channels, out_channels,
                               kernel_size=5,
                               stride=1,
                               padding=2,
                               bias=False)
        self.bn1 = nn.BatchNorm2d(out_channels)
        self.relu = nn.ReLU(inplace=True)
        self._up_pool = Unpool(in_channels)
        self.oheight = oheight
        self.oweight = oweight

    def _up_pooling(self, x, scale):
        x = self._up_pool(x)
        if self.oweight != 0 and self.oheight != 0:
            x = x.narrow(2, 0, self.oheight)
            x = x.narrow(3, 0, self.oweight)
        return x

    def forward(self, x):
        x = self._up_pooling(x, 2)
        out = self.relu(self.bn1(self.conv1(x)))
        return out
